<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
    <title>Reading KML Files with Google Maps JavaScript API Version 3</title>

    <style type="text/css">
        html,
        body,
        #map_canvas {
            width: 750px;
            height: 600px;
            margin: 0;
            padding: 0;
        }

        .infowindow * {
            font-size: 90%;
            margin: 0
        }
    </style>

    <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
    <script type="text/javascript" src="https://cdn.rawgit.com/geocodezip/geoxml3/master/polys/geoxml3.js"></script>
    <script type="text/javascript" src="https://cdn.rawgit.com/geocodezip/geoxml3/master/ProjectedOverlay.js"></script>

    <script type="text/javascript">
        var geoXml = null;
        var map = null;
        var myLatLng = null;

        function initialize() {
            myLatLng = new google.maps.LatLng(37.422104808, -122.0838851);

            var myOptions = {
                zoom: 18,
                center: new google.maps.LatLng(37.422104808, -122.0838851),
                // zoom: 5,
                // center: myLatlng,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            };
            map = new google.maps.Map(document.getElementById("map_canvas"),
                myOptions);

            geoXml = new geoXML3.parser({
                map: map,
                singleInfoWindow: true,
                afterParse: useTheData
            });
            //geoXml.parse('http://www.geocodezip.com/TrashDays40.xml');
            geoXml.parse("https://ovc.catastro.meh.es/Cartografia/WMS/BuscarParcelaGoogle3D.aspx?refcat=23900A015000050000SK&del=23&mun=900&tipo=3d");
        };

        function useTheData(doc) {
            // Geodata handling goes here, using JSON properties of the doc object
            var sidebarHtml = '<table><tr><td><a href="javascript:showAll();">Show All</a></td></tr>';

            geoXmlDoc = doc[0];
            for (var i = 0; i < geoXmlDoc.gpolygons.length; i++) {
                // console.log(doc[0].markers[i].title);
                sidebarHtml += '<tr><td onmouseover="kmlHighlightPoly(' + i + ');" onmouseout="kmlUnHighlightPoly(' + i + ');"><a href="javascript:kmlClick(' + i + ');">' + doc[0].placemarks[i].name + '</a> - <a href="javascript:kmlShowPoly(' + i + ');">show</a></td></tr>';
                //    sidebarHtml += '<tr><td><a href="javascript:kmlClick('+i+');">'+doc[0].placemarks[i].name+'</a> - <a href="javascript:kmlShowPoly('+i+');">show</a></td></tr>';
                var placemark = geoXmlDoc.placemarks[i];
                //    var fill = kmlColor(style.color);
                //    var stroke = kmlColor(style.fillcolor);
                //    alert("color="+style.color+", fillcolor="+style.fillcolor);
                var kmlStrokeColor = kmlColor(placemark.style.color);
                var kmlFillColor = kmlColor(placemark.style.fillcolor);
                var normalStyle = {
                    strokeColor: kmlStrokeColor.color,
                    strokeWeight: placemark.style.width,
                    strokeOpacity: kmlStrokeColor.opacity,
                    fillColor: kmlFillColor.color,
                    fillOpacity: kmlFillColor.opacity
                };
                geoXmlDoc.gpolygons[i].normalStyle = normalStyle;

                highlightPoly(geoXmlDoc.gpolygons[i]);

                //doc[0].markers[i].setVisible(false);
            }
            sidebarHtml += "</table>";
            document.getElementById("sidebar").innerHTML = sidebarHtml;
        };

        function hide_kml() {
            geoXml.hideDocument();
        }
        function unhide_kml() {
            geoXml.showDocument();
        }
        function reload_kml() {
            geoXml.hideDocument();
            delete geoXml;
            geoXml = new geoXML3.parser({
                map: map,
                singleInfoWindow: true,
                afterParse: useTheData
            });
            geoXml.parse('http://www.geocodezip.com/TrashDays40.xml');
            //geoXml.parse('counties01.xml'); 

        }
        function showAll() {
            map.fitBounds(geoXmlDoc.bounds);
            for (var i = 0; i < geoXmlDoc.gpolygons.length; i++) {
                geoXmlDoc.gpolygons[i].setMap(map);
            }
        }

        function kmlClick(pm) {
            /*
               if (geoXml.docs[0].markers[pm].getMap())
                  google.maps.event.trigger(geoXml.docs[0].markers[pm],"click");
            */
            if (geoXml.docs[0].gpolygons[pm].getMap()) {
                google.maps.event.trigger(geoXmlDoc.gpolygons[pm], "click");
            } else {
                geoXmlDoc.gpolygons[pm].setMap(map);
                google.maps.event.trigger(geoXmlDoc.gpolygons[pm], "click");
            }
        }
        function kmlShowPoly(poly) {
            map.fitBounds(geoXmlDoc.gpolygons[poly].bounds);
            for (var i = 0; i < geoXmlDoc.gpolygons.length; i++) {
                if (i == poly) {
                    geoXmlDoc.gpolygons[i].setMap(map);
                    /*       geoXmlDoc.markers[i].setMap(map); */
                } else {
                    geoXmlDoc.gpolygons[i].setMap(null);
                    /*       geoXmlDoc.markers[i].setMap(null); */
                }
            }
        }

        function kmlColor(kmlIn) {
            var kmlColor = {};
            if (kmlIn) {
                aa = kmlIn.substr(0, 2);
                bb = kmlIn.substr(2, 2);
                gg = kmlIn.substr(4, 2);
                rr = kmlIn.substr(6, 2);
                kmlColor.color = "#" + rr + gg + bb;
                kmlColor.opacity = parseInt(aa, 16) / 256;
            } else {
                // defaults
                kmlColor.color = randomColor();
                kmlColor.opacity = 0.45;
            }
            return kmlColor;
        }
        function randomColor() {
            var color = "#";
            var colorNum = Math.random() * 8388607.0;  // 8388607 = Math.pow(2,23)-1
            var colorStr = colorNum.toString(16);
            color += colorStr.substring(0, colorStr.indexOf('.'));
            return color;
        };

        var highlightOptions = { 
            fillColor: "#FFFF00", 
            strokeColor: "#000000", 
            fillOpacity: 0.9, 
            strokeWidth: 10 
        };

        function kmlHighlightPoly(poly) {
            for (var i = 0; i < geoXmlDoc.gpolygons.length; i++) {
                if (i == poly) {
                    geoXmlDoc.gpolygons[i].setOptions(highlightOptions);
                } else {
                    geoXmlDoc.gpolygons[i].setOptions(geoXmlDoc.gpolygons[i].normalStyle);
                }
            }
        }
        function kmlUnHighlightPoly(poly) {
            for (var i = 0; i < geoXmlDoc.gpolygons.length; i++) {
                if (i == poly) {
                    geoXmlDoc.gpolygons[i].setOptions(geoXmlDoc.gpolygons[i].normalStyle);
                }
            }
        }

        function hide_markers_kml() {
            for (var i = 0; i < geoXmlDoc.markers.length; i++) {
                geoXmlDoc.markers[i].setVisible(false);
            }
        }

        function highlightPoly(poly) {
            //    poly.setOptions({fillColor: "#0000FF", strokeColor: "#0000FF", fillOpacity: 0.3});
            google.maps.event.addListener(poly, "mouseover", function () {
                poly.setOptions(highlightOptions);
            });
            google.maps.event.addListener(poly, "mouseout", function () {
                poly.setOptions(poly.normalStyle);
            });
        }
        function unhide_markers_kml() {
            for (var i = 0; i < geoXmlDoc.markers.length; i++) {
                geoXmlDoc.markers[i].setVisible(true);
            }
        }

        function hide_polys_kml() {
            for (var i = 0; i < geoXmlDoc.gpolylines.length; i++) {
                geoXmlDoc.gpolylines[i].setMap(null);
            }
        }
        function unhide_polys_kml() {
            for (var i = 0; i < geoXmlDoc.gpolylines.length; i++) {
                geoXmlDoc.gpolylines[i].setMap(map);
            }
        }
    
    </script>
</head>

<body onload="initialize()">
    <h4>Reading a
        <a href="http://code.google.com/intl/it-IT/apis/kml/documentation/">KML</a> file with Google Maps JavaScript API
        <a href="http://code.google.com/intl/it-IT/apis/maps/documentation/v3/">Version 3</a> and
        <a href="http://code.google.com/p/geoxml3/">geoxml3</a>.</h4>
    <!--  <button onclick="hide_markers_kml();">hide stars</button>
  <button onclick="unhide_markers_kml();">unhide stars</button> -->
    <!--  <button onclick="hide_polys_kml();">hide polylines</button>
  <button onclick="unhide_polys_kml();">unhide polylines</button> -->
    <button onclick="hide_kml();">hide</button>
    <button onclick="unhide_kml();">unhide</button>
    <!--  <button onclick="reload_kml();">reload</button> -->
    <table style="width:100%;">
        <tr>
            <td>
                <div id="map_canvas">
                </div>
            </td>
            <td>
                <div id="sidebar" style="width:300px;height:600px; overflow:auto"></div>
            </td>
        </tr>
    </table>
    <div id="map_text">
    </div>
    <script src="http://www.google-analytics.com/urchin.js" type="text/javascript"></script>
    <script type="text/javascript"> 
        _uacct = "UA-162157-1";
        urchinTracker();
    </script>
</body>

</html>