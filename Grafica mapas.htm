<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Showing elevation along a path</title>
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 100%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    </style>
    <script src="https://www.google.com/jsapi"></script>
  </head>
  <body>
    <div id="map" style="height:450px;"></div>
    <div id="elevation_chart"></div>
    <script>
      // Load the Visualization API and the columnchart package.
    google.load('visualization', '1', {packages: ['columnchart']});

    function initMap() {
      // The following path marks a path from Mt. Whitney, the highest point in the
      // continental United States to Badwater, Death Valley, the lowest point.
      var path = [
          {lat: 37.855646, lng: -3.73376},  
          {lat: 37.852571, lng: -3.732784}, 
          {lat: 37.84964, lng: -3.7326559},  
          {lat: 37.850521, lng: -3.730284}];

      var map = new google.maps.Map(document.getElementById('map'), {
        zoom: 16,
        center: path[1],
        mapTypeId: "satellite",
        zoomControl: false,
        mapTypeControl: false,
        scaleControl: false,
        streetViewControl: false,
        rotateControl: false,
        fullscreenControl: false
      });

      // Create an ElevationService.
      var elevator = new google.maps.ElevationService;

      // Draw the path, using the Visualization API and the Elevation service.
      displayPathElevation(path, elevator, map);
    
      function displayPathElevation(path, elevator, map) {
        // Display a polyline of the elevation path.
        new google.maps.Polyline({
          path: path,
          strokeColor: 'blue',
          strokeOpacity: 0.5,
          map: map
        });

        // Create a PathElevationRequest object using this array.
        // Ask for 256 samples along that path.
        // Initiate the path request.
        elevator.getElevationAlongPath({
          'path': path,
          'samples': 256
        }, plotElevation);
      }

      // Takes an array of ElevationResult objects, draws the path on the map
      // and plots the elevation profile on a Visualization API ColumnChart.
      function plotElevation(elevations, status) {
        var chartDiv = document.getElementById('elevation_chart');
        if (status !== 'OK') {
          // Show the error code inside the chartDiv.
          chartDiv.innerHTML = 'Cannot show elevation: request failed because ' +
              status;
          return;
        }
        // Create a new chart in the elevation_chart DIV.
        var chart = new google.visualization.ColumnChart(chartDiv);

        // Extract the data from which to populate the chart.
        // Because the samples are equidistant, the 'Sample'
        // column here does double duty as distance along the
        // X axis.
        var data = new google.visualization.DataTable();
        data.addColumn('string', 'Sample');
        data.addColumn('number', 'Elevation');
        for (var i = 0; i < elevations.length; i++) {
          data.addRow(['', elevations[i].elevation]);
        }

        // Draw the chart using the data within its DIV.
        chart.draw(data, {
          height: 150,
          legend: 'none',
          titleY: 'Elevation (m)'
        });
      }
      // Controlo la visualizacion del chart
      
    } //Meto todo en IniMap a ver que pasa
    </script>

    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCRbr23Yvm71EcdyAP2QK8dr_W2rh6usJs&callback=initMap">
    </script>
  </body>
</html>